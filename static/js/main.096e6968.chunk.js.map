{"version":3,"sources":["api/openweather.js","components/WeatherCard.js","components/Search.js","components/App.js","index.js"],"names":["axios","create","baseURL","WeatherCard","weatherData","weather","weatherIcon","icon","temp","Math","floor","main","feeelsLike","feels_like","console","log","className","style","width","backgroundColor","color","name","src","alt","description","humidity","pressure","Search","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","onTermSubmit","onSubmit","this","type","placeholder","onChange","React","Component","App","onSearch","a","async","openweather","get","params","q","appid","units","response","data","ReactDOM","render","document","getElementById"],"mappings":"8OACeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,sEC0CEC,EA1CK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrB,IAAKA,EACH,OAAO,qCAET,IAAMC,EAAUD,EAAYC,QAAQ,GAC9BC,EAAW,2CAAuCD,EAAQE,KAA/C,WACXC,EAAOC,KAAKC,MAAMN,EAAYO,KAAKH,MACnCI,EAAaH,KAAKC,MAAMN,EAAYO,KAAKE,YAE/C,OADAC,QAAQC,IAAIX,EAAYO,KAAKH,MAE3B,yBACEQ,UAAU,gCACVC,MAAO,CAAEC,MAAO,IAAKC,gBAAiB,YAEtC,yBAAKH,UAAU,uBAAuBC,MAAO,CAAEG,MAAO,YACnDhB,EAAYiB,MAEf,yBAAKL,UAAU,aACb,yBAAKM,IAAKhB,EAAaiB,IAAI,KAC3B,4BAAKlB,EAAQM,MACb,2BAAIN,EAAQmB,aACZ,wBAAIR,UAAU,aAAaR,EAA3B,UAEF,yBAAKQ,UAAU,0BAA0BC,MAAO,CAAEG,MAAO,YACzD,yBAAKJ,UAAU,kDACb,wBAAIA,UAAU,iBACZ,4BAAI,6CAAJ,KACA,4BAAI,gDACJ,4BAAI,+CAEN,wBAAIA,UAAU,iBACZ,4BAAI,gCAASZ,EAAYO,KAAKc,SAA1B,OACJ,4BAAI,gCAASb,EAAT,SACJ,4BAAI,gCAASR,EAAYO,KAAKe,SAA1B,aCRCC,E,2MAxBbC,MAAQ,CAAEC,KAAM,I,EAChBC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAEvCC,aAAe,SAACJ,GACZA,EAAMK,iBACN,EAAKC,MAAMC,aAAa,EAAKV,MAAMC,O,wEAGnC,OACE,yBAAKb,UAAU,iCACf,0BAAMuB,SAAUC,KAAKL,aAAcnB,UAAU,YAAYC,MAAO,CAACC,MAAO,MACtE,2BACEuB,KAAK,OACLzB,UAAU,gBACV0B,YAAY,aACZC,SAAUH,KAAKV,sB,GAjBJc,IAAMC,WC+BZC,E,2MA5BblB,MAAQ,CAAExB,YAAa,M,EAIvB2C,SAAW,SAAMlB,GAAN,eAAAmB,EAAAC,OAAA,kEAAAD,EAAA,MACcE,EAAYC,IAAI,oBAAqB,CAC1DC,OAAQ,CACNC,EAAGxB,EACHyB,MAAO,mCACPC,MAAO,aALF,OACHC,EADG,OAQT,EAAKxB,SAAS,CAAE5B,YAAaoD,EAASC,OAR7B,sC,mFAFTjB,KAAKO,SAAS,W,+BAed,OACE,yBAAK/B,UAAU,aACb,kBAAC,EAAD,CAAQsB,aAAcE,KAAKO,WAC3B,yBAAK/B,UAAU,uCACf,kBAAC,EAAD,CAAaZ,YAAaoC,KAAKZ,MAAMxB,oB,GAtB3BwC,IAAMC,WCAxBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.096e6968.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/http://api.openweathermap.org'\r\n})","import React from \"react\";\r\n\r\nconst WeatherCard = ({ weatherData }) => {\r\n  if (!weatherData) {\r\n    return <p>Loding</p>;\r\n  }\r\n  const weather = weatherData.weather[0];\r\n  const weatherIcon = `http://openweathermap.org/img/wn/${weather.icon}@2x.png`;\r\n  const temp = Math.floor(weatherData.main.temp);\r\n  const feeelsLike = Math.floor(weatherData.main.feels_like);\r\n  console.log(weatherData.main.temp);\r\n  return (\r\n    <div\r\n      className=\"card text-center text-light  \"\r\n      style={{ width: 400, backgroundColor: \"#4770A8\" }}\r\n    >\r\n      <div className=\"card-header bg-white\" style={{ color: \"#4770A8\" }}>\r\n        {weatherData.name}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <img src={weatherIcon} alt=\"\" />\r\n        <h3>{weather.main}</h3>\r\n        <p>{weather.description}</p>\r\n        <h6 className=\"display-4\">{temp}&deg; </h6>\r\n      </div>\r\n      <div className=\"card-footer  bg-white  \" style={{ color: \"#4770A8\" }}>\r\n      <div className='row justify-content-between align-items-center'>\r\n        <ul className=\"list-unstyled\">\r\n          <li><strong>HUMIDITY:</strong> </li>\r\n          <li><strong>FEELS LIKE:</strong></li>\r\n          <li><strong>PRESSURE:</strong></li>\r\n        </ul>\r\n        <ul className=\"list-unstyled\">\r\n          <li><strong>{weatherData.main.humidity} %</strong></li>\r\n          <li><strong>{feeelsLike}&deg;</strong></li>\r\n          <li><strong>{weatherData.main.pressure}hPa</strong></li>\r\n        </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  state = { term: \"\" };\r\n  onInputChange = event => {\r\n    this.setState({ term: event.target.value });\r\n  };\r\nonFormSubmit = (event)=>{\r\n    event.preventDefault()\r\n    this.props.onTermSubmit(this.state.term)\r\n}\r\n  render() {\r\n    return (\r\n      <div className='d-flex justify-content-center'>\r\n      <form onSubmit={this.onFormSubmit} className=\"form mt-3\" style={{width: 400}}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control \"\r\n          placeholder='write city'\r\n          onChange={this.onInputChange}\r\n        />\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport openweather from \"../api/openweather\";\nimport WeatherCard from \"./WeatherCard\";\nimport Search from \"./Search\";\nclass App extends React.Component {\n  state = { weatherData: null };\n  componentDidMount(){\n    this.onSearch('mecca')\n  }\n  onSearch = async term => {\n    const response = await openweather.get(\"/data/2.5/weather\", {\n      params: {\n        q: term,\n        appid: \"e2e89470ceaffbb1c32ad751a780042f\",\n        units: \"metric\"\n      }\n    });\n    this.setState({ weatherData: response.data });\n  };\n  \n  render() {\n   \n    return (\n      <div className=\"container\">\n        <Search onTermSubmit={this.onSearch} />\n        <div className=\"d-flex mt-3 justify-content-center \">\n        <WeatherCard weatherData={this.state.weatherData} />\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}