{"version":3,"sources":["api/openweather.js","components/WeatherCard.js","components/Search.js","components/App.js","index.js"],"names":["axios","create","baseURL","WeatherCard","weatherData","weather","weatherIcon","icon","temp","Math","floor","main","console","log","className","style","width","name","src","alt","description","Search","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","onTermSubmit","onSubmit","this","type","placeholder","onChange","React","Component","App","onSearch","a","async","openweather","get","params","q","appid","units","response","data","ReactDOM","render","document","getElementById"],"mappings":"8OACeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,sECsBEC,EAtBK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,YAChB,IAAIA,EACA,OAAO,qCAEX,IAAMC,EAAUD,EAAYC,QAAQ,GAC9BC,EAAW,2CAAuCD,EAAQE,KAA/C,WACXC,EAAOC,KAAKC,MAAMN,EAAYO,KAAKH,MAE3C,OADEI,QAAQC,IAAIT,EAAYO,KAAKH,MAE7B,yBAAKM,UAAU,uCAAuCC,MAAO,CAACC,MAAO,MACrE,yBAAKF,UAAU,6BAA6BV,EAAYa,MACtD,yBAAKH,UAAU,aACb,yBAAKI,IAAKZ,EAAaa,IAAI,KAC3B,4BAAKd,EAAQM,MACb,2BAAIN,EAAQe,aACZ,wBAAIN,UAAU,aAAaN,MCUtBa,E,2MAxBbC,MAAQ,CAAEC,KAAM,I,EAChBC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAEvCC,aAAe,SAACJ,GACZA,EAAMK,iBACN,EAAKC,MAAMC,aAAa,EAAKV,MAAMC,O,wEAGnC,OACE,yBAAKT,UAAU,iCACf,0BAAMmB,SAAUC,KAAKL,aAAcf,UAAU,YAAYC,MAAO,CAACC,MAAO,MACtE,2BACEmB,KAAK,OACLrB,UAAU,gBACVsB,YAAY,aACZC,SAAUH,KAAKV,sB,GAjBJc,IAAMC,WC+BZC,E,2MA5BblB,MAAQ,CAAElB,YAAa,M,EAIvBqC,SAAW,SAAMlB,GAAN,eAAAmB,EAAAC,OAAA,kEAAAD,EAAA,MACcE,EAAYC,IAAI,oBAAqB,CAC1DC,OAAQ,CACNC,EAAGxB,EACHyB,MAAO,mCACPC,MAAO,aALF,OACHC,EADG,OAQT,EAAKxB,SAAS,CAAEtB,YAAa8C,EAASC,OAR7B,sC,mFAFTjB,KAAKO,SAAS,W,+BAed,OACE,yBAAK3B,UAAU,aACb,kBAAC,EAAD,CAAQkB,aAAcE,KAAKO,WAC3B,yBAAK3B,UAAU,sCACf,kBAAC,EAAD,CAAaV,YAAa8B,KAAKZ,MAAMlB,oB,GAtB3BkC,IAAMC,WCAxBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4e5f6d40.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/http://api.openweathermap.org'\r\n})","import React from \"react\";\r\n\r\nconst WeatherCard = ({weatherData})=>{\r\n      if(!weatherData){\r\n          return <p>Loding</p>\r\n      }\r\n      const weather = weatherData.weather[0]\r\n      const weatherIcon = `http://openweathermap.org/img/wn/${weather.icon}@2x.png`\r\n      const temp = Math.floor(weatherData.main.temp)\r\n      console.log(weatherData.main.temp)\r\n    return (\r\n      <div className=\"card bg-info text-center text-light \" style={{width: 400,}}>\r\n      <div className=\"card-header bg-secondary \">{weatherData.name}</div>\r\n        <div className=\"card-body\">\r\n          <img src={weatherIcon} alt=\"\"/>\r\n          <h3>{weather.main}</h3>\r\n          <p>{weather.description}</p>\r\n          <h6 className='display-4'>{temp}</h6>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  state = { term: \"\" };\r\n  onInputChange = event => {\r\n    this.setState({ term: event.target.value });\r\n  };\r\nonFormSubmit = (event)=>{\r\n    event.preventDefault()\r\n    this.props.onTermSubmit(this.state.term)\r\n}\r\n  render() {\r\n    return (\r\n      <div className='d-flex justify-content-center'>\r\n      <form onSubmit={this.onFormSubmit} className=\"form mt-3\" style={{width: 400}}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control \"\r\n          placeholder='write city'\r\n          onChange={this.onInputChange}\r\n        />\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport openweather from \"../api/openweather\";\nimport WeatherCard from \"./WeatherCard\";\nimport Search from \"./Search\";\nclass App extends React.Component {\n  state = { weatherData: null };\n  componentDidMount(){\n    this.onSearch('mecca')\n  }\n  onSearch = async term => {\n    const response = await openweather.get(\"/data/2.5/weather\", {\n      params: {\n        q: term,\n        appid: \"e2e89470ceaffbb1c32ad751a780042f\",\n        units: \"metric\"\n      }\n    });\n    this.setState({ weatherData: response.data });\n  };\n  \n  render() {\n   \n    return (\n      <div className=\"container\">\n        <Search onTermSubmit={this.onSearch} />\n        <div className=\"d-flex mt-3 justify-content-center\">\n        <WeatherCard weatherData={this.state.weatherData} />\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}